generator client {
  provider="prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

enum RELATION_STATUS {
  PENDING_FIRST_SECOND
  PENDING_SECOND_FIRST
  FRIENDS
  BLOCK_FIRST_SECOND
  BLOCK_SECOND_FIRST
  BLOCK_BOTH
}

model User {
  id Int @id() @default(autoincrement())
  name String
  email String @unique
  passwordHash String @map("password_hash")
  createdAt DateTime @default(now())
  sentMessages Message[] @relation("sender")
  receivedMessages Message[] @relation("receiver") 
  verificationToken VerificationToken[]
  userSession userSession[]
  // receivedInvitations Invitation[] @relation("from")
  // sentInvitations Invitation[] @relation("to")
  userRelationsFirst UserRelationship[] @relation("first")
  userRelationsSecond UserRelationship[] @relation("second")
}

model UserRelationship {
  userFirstId Int
  userFirst User @relation("first", fields: [userFirstId], references: [id])
  userSecondId Int
  userSecond User @relation("second", fields: [userSecondId], references: [id])
  sentInvitationDate DateTime? @default(now())
  relationStatus RELATION_STATUS 
  @@unique([userFirstId, userSecondId]) 
  @@id([userFirstId, userSecondId]) 
}

model Message {
  id Int @id @default(autoincrement())
  userFromId Int
  userFrom User @relation("sender", fields: [userFromId], references: [id])
  userToId Int 
  userTo User @relation("receiver", fields: [userToId], references: [id])
  content String
  isRead Boolean @default(false)
  createdDate DateTime @default(now())
}

// model Invitation {
//   id Int @id @default(autoincrement())
//   userFromId Int
//   userFrom User @relation("from", fields: [userFromId], references: [id])
//   userToId Int
//   userTo User @relation("to", fields: [userToId], references: [id])
//   createdDate DateTime @default(now())
// }

model userSession {
  id Int @id @default(autoincrement())
  userId Int 
  token String
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id Int @id @default(autoincrement())
  token String @unique
  userId Int
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id])
}